version: '3.4'

services:
  traefik:
    image: "traefik:v3.0.0-beta4"
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    deploy:
      placement:
        constraints:
          # Make the traefik service run only on the node with this label
          # as the node with it has the volume for the certificates
          - node.labels.traefik-public.traefik-public-certificates == true
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik-public-http.rule=Host(`monitor.maltego.local`)
      - traefik.http.routers.traefik-public-http.entrypoints=http
      - traefik.http.services.traefik-public.loadbalancer.server.port=8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:80
      - --entrypoints.http.address=:443
      - --api
      - --api.dashboard=true
      - --api.insecure=true
      #- --log.level=DEBUG

  qdrant:
    image: "qdrant/qdrant"
    hostname: qdrant
    ports:
      - target: 6333
        published: 6333
        mode: host

  infinity:
    image: "michaelf34/infinity"
    hostname: infinity
    command: --model-name-or-path BAAI/bge-small-en
    ports:
      - target: 7997
        published: 7997
        mode: host

  neo4j:
    restart: always
    image: neo4j:5.17
    volumes:
      - ./data:/data
      - ./plugins:/plugins
      - ./import:/import
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,algo.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_apoc_uuid_enabled=true
      - NEO4J_dbms_default__listen__address=0.0.0.0
      - NEO4J_dbms_allow__upgrade=true
      - NEO4J_dbms_default__database=neo4j
      - NEO4J_AUTH=neo4j/neo4j

  notioncrawler:
    platform: "linux/amd64"
    restart: always
    build:
      context: ./apps/notioncrawler
      dockerfile: Dockerfile
    depends_on:
      - qdrant
    environment:
      NEO4J_URL: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASS: neo4j
    env_file:
      - .env
      - .env.local

volumes:
  Neo4j-test: